{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uconnect\\\\uConnect\\\\src\\\\Components\\\\ViewOpportunity\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { OpportunityCard } from './OpportunityCard';\nimport { Card, Col, Container, Jumbotron, Row, Image, Button, NavDropdown } from 'react-bootstrap';\nimport styles from './Opportunity.module.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapPathToResource = {\n  conference: {\n    image: import('../../Assets/conference-large.png')\n  },\n  competition: {\n    image: import('../../Assets/coding-large.png')\n  },\n  scholarship: {\n    image: import('../../Assets/scholarship-large.png')\n  },\n  hackathon: {\n    image: import('../../Assets/hackathon-large.png')\n  },\n  intern: {\n    image: import('../../Assets/internships-large.png')\n  },\n  job: {\n    image: import('../../Assets/fte.svg')\n  }\n};\n/**\n * @param {Object} props\n * @param {string} props.path - API path. something like `internships`\n */\n\nconst URL = window.location.href;\nconst splitUrl = URL.split('/viewopportunity/')[1];\nconst mapUrlToName = {\n  techconf: 'Tech Conferences',\n  codingcomp: 'Coding Competitions',\n  scholarship: 'Scholarships',\n  hackathon: 'Hackathons',\n  internships: 'Internship Opportunities',\n  fulltime: 'Full Time Jobs'\n};\nexport function ViewOpportunity(props) {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [imgSrc, setImgSrc] = React.useState();\n  const [postOpportunityPath, setPostOpportunityPath] = React.useState(); // whenever props.path changes, get latest data from backend\n\n  React.useEffect(() => {\n    axios.get(generateAPIEndpoint(props.path)).then(res => {\n      setData(res.data);\n    }).catch(err => console.log(err.stack));\n  }, [props.path]); // lazy load image\n\n  React.useEffect(() => {\n    mapPathToResource[props.path].image.then(mod => setImgSrc(mod.default));\n  }, [props.path]); // as the last chunk of ViewOpportunity and PostOpportunity is same, we can\n  // simply extract it from the URL. passing a prop is not necessary\n\n  React.useEffect(() => {\n    const pathname = window.location.pathname;\n    const lastChunk = pathname.split('/').pop();\n    lastChunk && setPostOpportunityPath(`/postopportunity/${lastChunk}`);\n  }, []);\n\n  if (data.length === 0 || !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '220px',\n          marginBottom: '200px'\n        },\n        children: \"Loading Opportunities if any...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  const data_length = data.length; // used to check whether opportunity count is 0\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data_length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '220px',\n          marginBottom: '200px'\n        },\n        children: \"No opportunities found!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              backgroundColor: '#BD6997',\n              marginTop: '7rem',\n              height: '10rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                href: postOpportunityPath,\n                style: {\n                  borderRadius: '5 5 5 5',\n                  borderWidth: '0 0 0 0'\n                },\n                className: styles.Button,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \"Post Opportunity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 141\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 2\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n          style: {\n            backgroundColor: 'white',\n            marginTop: '5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n                title: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.Title,\n                  style: {\n                    fontSize: '30px',\n                    fontFamily: 'Arial, Helvetica, sans-serif',\n                    marginRight: '10px',\n                    marginTop: '0'\n                  },\n                  children: mapUrlToName[splitUrl]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 20\n                }, this),\n                id: \"dropdown-basic-button\",\n                className: styles.Dropdown,\n                children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/fulltime\",\n                  children: [' ', \"Full Time Jobs\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/hackathon\",\n                  children: [' ', \"Hackathons\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/scholarship\",\n                  children: [' ', \"Scholarships\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/codingcomp\",\n                  children: [' ', \"Coding Competitions\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/techconf\",\n                  children: [' ', \"Tech Conferences\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"/viewopportunity/internships\",\n                  children: [' ', \"Internship Opportunities\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  marginTop: '20px'\n                },\n                md: 12,\n                children: data.map(item => {\n                  return /*#__PURE__*/_jsxDEV(OpportunityCard, {\n                    item: item\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 28\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true);\n}\n/**\n * @param {string} pathChunk API endpoint path for this specific job listing\n */\n\n_s(ViewOpportunity, \"qXNkxKh6O5D45CTHuxFeKUSG3rY=\");\n\n_c = ViewOpportunity;\n\nfunction generateAPIEndpoint(pathChunk) {\n  return `https://opportunitycalendar.herokuapp.com/opportunities/${pathChunk}/list/`;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOpportunity\");","map":{"version":3,"sources":["D:/Uconnect/uConnect/src/Components/ViewOpportunity/index.js"],"names":["React","axios","OpportunityCard","Card","Col","Container","Jumbotron","Row","Image","Button","NavDropdown","styles","Navbar","mapPathToResource","conference","image","competition","scholarship","hackathon","intern","job","URL","window","location","href","splitUrl","split","mapUrlToName","techconf","codingcomp","internships","fulltime","ViewOpportunity","props","data","setData","useState","imgSrc","setImgSrc","postOpportunityPath","setPostOpportunityPath","useEffect","get","generateAPIEndpoint","path","then","res","catch","err","console","log","stack","mod","default","pathname","lastChunk","pop","length","textAlign","marginTop","marginBottom","data_length","backgroundColor","height","borderRadius","borderWidth","fontWeight","Title","fontSize","fontFamily","marginRight","Dropdown","map","item","id","pathChunk"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { OpportunityCard } from './OpportunityCard';\nimport {\n  Card,\n  Col,\n  Container,\n  Jumbotron,\n  Row,\n  Image,\n  Button,\n  NavDropdown,\n} from 'react-bootstrap';\nimport styles from './Opportunity.module.css';\nimport Navbar from './Navbar';\n\n\nconst mapPathToResource = {\n  conference: { image: import('../../Assets/conference-large.png') },\n  competition: { image: import('../../Assets/coding-large.png') },\n  scholarship: { image: import('../../Assets/scholarship-large.png') },\n  hackathon: { image: import('../../Assets/hackathon-large.png') },\n  intern: { image: import('../../Assets/internships-large.png') },\n  job: { image: import('../../Assets/fte.svg') },\n};\n\n/**\n * @param {Object} props\n * @param {string} props.path - API path. something like `internships`\n */\n\nconst URL = window.location.href;\nconst splitUrl = URL.split('/viewopportunity/')[1];\nconst mapUrlToName = {\n  techconf: 'Tech Conferences',\n  codingcomp: 'Coding Competitions',\n  scholarship: 'Scholarships' ,\n  hackathon: 'Hackathons',\n  internships: 'Internship Opportunities' ,\n  fulltime: 'Full Time Jobs',\n};\n\n\nexport function ViewOpportunity(props) {\n  const [data, setData] = React.useState([]);\n  const [imgSrc, setImgSrc] = React.useState();\n  const [postOpportunityPath, setPostOpportunityPath] = React.useState();\n\n  // whenever props.path changes, get latest data from backend\n  React.useEffect(() => {\n    axios\n      .get(generateAPIEndpoint(props.path))\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((err) => console.log(err.stack));\n  }, [props.path]);\n\n  // lazy load image\n  React.useEffect(() => {\n    mapPathToResource[props.path].image.then((mod) => setImgSrc(mod.default));\n  }, [props.path]);\n\n  // as the last chunk of ViewOpportunity and PostOpportunity is same, we can\n  // simply extract it from the URL. passing a prop is not necessary\n  React.useEffect(() => {\n    const pathname = window.location.pathname;\n    const lastChunk = pathname.split('/').pop();\n    lastChunk && setPostOpportunityPath(`/postopportunity/${lastChunk}`);\n  }, []);\n\n  if (data.length === 0 || !data) { \n    return (\n      <div>\n        <Navbar />\n        <h3\n          style={{\n            textAlign: 'center',\n            marginTop: '220px',\n            marginBottom: '200px',\n          }}\n        >\n          Loading Opportunities if any...\n        </h3>\n      </div>\n    );\n  }\n  \n  const data_length = data.length // used to check whether opportunity count is 0\n    \n  return (\n    <>\n      { data_length === 0 ? (\n      <div>\n        <Navbar />\n        <h3\n          style={{\n            textAlign: 'center',\n            marginTop: '220px',\n            marginBottom: '200px',\n          }}\n        >\n          No opportunities found!!\n        </h3>\n      </div>) :\n      <div>\n        <Navbar />\n        <div>\n\n        <Card className=\"text-center\" >\n \n <Card.Body style={{backgroundColor: '#BD6997', marginTop: '7rem' , height:'10rem'}}>\n   <Card.Title> \n     \n                 </Card.Title>\n   <Card.Text>\n               \n   <Button variant=\"primary\"  href={postOpportunityPath} style={{ borderRadius:'5 5 5 5', borderWidth:'0 0 0 0'}} className={styles.Button}><span style={{fontWeight:'bold'}} >\n   Post Opportunity\n     </span></Button>\n \n\n\n   </Card.Text>\n  \n </Card.Body>\n\n\n</Card>\n          <Jumbotron style={{ backgroundColor: 'white' , marginTop:'5rem'}}>\n          \n            <Container>\n              <Row>\n              <NavDropdown\n            title={<span className={styles.Title} style={{fontSize:'30px' , fontFamily: 'Arial, Helvetica, sans-serif',\n            marginRight: '10px', marginTop:'0' }}>{mapUrlToName[splitUrl]}</span>}\n            id=\"dropdown-basic-button\" \n            className={styles.Dropdown}\n          >\n            <NavDropdown.Item href=\"/viewopportunity/fulltime\">\n              {' '}\n              Full Time Jobs{' '} \n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/viewopportunity/hackathon\">\n              {' '}\n              Hackathons{' '}\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/viewopportunity/scholarship\">\n              {' '}\n              Scholarships{' '}\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/viewopportunity/codingcomp\">\n              {' '}\n              Coding Competitions{' '}\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/viewopportunity/techconf\">\n              {' '}\n              Tech Conferences{' '}\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/viewopportunity/internships\">\n              {' '}\n              Internship Opportunities{' '}\n            </NavDropdown.Item>\n          </NavDropdown>\n              </Row>\n            \n\n              <Row>\n                <Col style={{ marginTop: '20px' }} md={12}>\n                  {data.map((item) => {\n                    return <OpportunityCard key={item.id} item={item} />;\n                  })}\n                </Col>\n\n              </Row>\n            </Container>\n\n          </Jumbotron>\n        </div>\n      </div>\n      }\n      );\n    </>\n  );\n}\n\n/**\n * @param {string} pathChunk API endpoint path for this specific job listing\n */\nfunction generateAPIEndpoint(pathChunk) {\n  return `https://opportunitycalendar.herokuapp.com/opportunities/${pathChunk}/list/`;\n}\n"]},"metadata":{},"sourceType":"module"}